//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NexigoApi.NextflowService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskItem", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(NexigoApi.NextflowService.TaskItemResult))]
    public partial class TaskItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentActivityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentActivityId {
            get {
                return this.CurrentActivityIdField;
            }
            set {
                if ((this.CurrentActivityIdField.Equals(value) != true)) {
                    this.CurrentActivityIdField = value;
                    this.RaisePropertyChanged("CurrentActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentActivityName {
            get {
                return this.CurrentActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentActivityNameField, value) != true)) {
                    this.CurrentActivityNameField = value;
                    this.RaisePropertyChanged("CurrentActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentActivityType {
            get {
                return this.CurrentActivityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentActivityTypeField, value) != true)) {
                    this.CurrentActivityTypeField = value;
                    this.RaisePropertyChanged("CurrentActivityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessId {
            get {
                return this.ProcessIdField;
            }
            set {
                if ((this.ProcessIdField.Equals(value) != true)) {
                    this.ProcessIdField = value;
                    this.RaisePropertyChanged("ProcessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequesterName {
            get {
                return this.RequesterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesterNameField, value) != true)) {
                    this.RequesterNameField = value;
                    this.RaisePropertyChanged("RequesterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskItemResult", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class TaskItemResult : NexigoApi.NextflowService.TaskItem {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentHolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentHolder {
            get {
                return this.CurrentHolderField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentHolderField, value) != true)) {
                    this.CurrentHolderField = value;
                    this.RaisePropertyChanged("CurrentHolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultCode {
            get {
                return this.ResultCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultCodeField, value) != true)) {
                    this.ResultCodeField = value;
                    this.RaisePropertyChanged("ResultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResultMessage {
            get {
                return this.ResultMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultMessageField, value) != true)) {
                    this.ResultMessageField = value;
                    this.RaisePropertyChanged("ResultMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((this.RowNumberField.Equals(value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNumber {
            get {
                return this.TotalNumberField;
            }
            set {
                if ((this.TotalNumberField.Equals(value) != true)) {
                    this.TotalNumberField = value;
                    this.RaisePropertyChanged("TotalNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityAction", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class ActivityAction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionId {
            get {
                return this.ActionIdField;
            }
            set {
                if ((this.ActionIdField.Equals(value) != true)) {
                    this.ActionIdField = value;
                    this.RaisePropertyChanged("ActionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskList", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class TaskList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegatedUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DelegatedUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DelegatedUserId {
            get {
                return this.DelegatedUserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegatedUserIdField, value) != true)) {
                    this.DelegatedUserIdField = value;
                    this.RaisePropertyChanged("DelegatedUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DelegatedUserName {
            get {
                return this.DelegatedUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DelegatedUserNameField, value) != true)) {
                    this.DelegatedUserNameField = value;
                    this.RaisePropertyChanged("DelegatedUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessId {
            get {
                return this.ProcessIdField;
            }
            set {
                if ((this.ProcessIdField.Equals(value) != true)) {
                    this.ProcessIdField = value;
                    this.RaisePropertyChanged("ProcessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequesterId {
            get {
                return this.RequesterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesterIdField, value) != true)) {
                    this.RequesterIdField = value;
                    this.RaisePropertyChanged("RequesterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequesterName {
            get {
                return this.RequesterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesterNameField, value) != true)) {
                    this.RequesterNameField = value;
                    this.RaisePropertyChanged("RequesterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((this.RowNumberField.Equals(value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNumber {
            get {
                return this.TotalNumberField;
            }
            set {
                if ((this.TotalNumberField.Equals(value) != true)) {
                    this.TotalNumberField = value;
                    this.RaisePropertyChanged("TotalNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentHistoryResult", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class CommentHistoryResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AttachmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Attachment {
            get {
                return this.AttachmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AttachmentField, value) != true)) {
                    this.AttachmentField = value;
                    this.RaisePropertyChanged("Attachment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedDate {
            get {
                return this.CompletedDateField;
            }
            set {
                if ((this.CompletedDateField.Equals(value) != true)) {
                    this.CompletedDateField = value;
                    this.RaisePropertyChanged("CompletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Participant {
            get {
                return this.ParticipantField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantField, value) != true)) {
                    this.ParticipantField = value;
                    this.RaisePropertyChanged("Participant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParticipantType {
            get {
                return this.ParticipantTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantTypeField, value) != true)) {
                    this.ParticipantTypeField = value;
                    this.RaisePropertyChanged("ParticipantType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessId {
            get {
                return this.ProcessIdField;
            }
            set {
                if ((this.ProcessIdField.Equals(value) != true)) {
                    this.ProcessIdField = value;
                    this.RaisePropertyChanged("ProcessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessVariable", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class ProcessVariable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessVariableIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessVariableId {
            get {
                return this.ProcessVariableIdField;
            }
            set {
                if ((this.ProcessVariableIdField.Equals(value) != true)) {
                    this.ProcessVariableIdField = value;
                    this.RaisePropertyChanged("ProcessVariableId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class ListActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedDate {
            get {
                return this.CompletedDateField;
            }
            set {
                if ((this.CompletedDateField.Equals(value) != true)) {
                    this.CompletedDateField = value;
                    this.RaisePropertyChanged("CompletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Participant {
            get {
                return this.ParticipantField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantField, value) != true)) {
                    this.ParticipantField = value;
                    this.RaisePropertyChanged("Participant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequesterName {
            get {
                return this.RequesterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesterNameField, value) != true)) {
                    this.RequesterNameField = value;
                    this.RaisePropertyChanged("RequesterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LastActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class LastActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityType {
            get {
                return this.ActivityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityTypeField, value) != true)) {
                    this.ActivityTypeField = value;
                    this.RaisePropertyChanged("ActivityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedDate {
            get {
                return this.CompletedDateField;
            }
            set {
                if ((this.CompletedDateField.Equals(value) != true)) {
                    this.CompletedDateField = value;
                    this.RaisePropertyChanged("CompletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Participant {
            get {
                return this.ParticipantField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantField, value) != true)) {
                    this.ParticipantField = value;
                    this.RaisePropertyChanged("Participant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessId {
            get {
                return this.ProcessIdField;
            }
            set {
                if ((this.ProcessIdField.Equals(value) != true)) {
                    this.ProcessIdField = value;
                    this.RaisePropertyChanged("ProcessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequesterId {
            get {
                return this.RequesterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesterIdField, value) != true)) {
                    this.RequesterIdField = value;
                    this.RaisePropertyChanged("RequesterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LastActivityOrder", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class LastActivityOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RequesterNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityType {
            get {
                return this.ActivityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityTypeField, value) != true)) {
                    this.ActivityTypeField = value;
                    this.RaisePropertyChanged("ActivityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedDate {
            get {
                return this.CompletedDateField;
            }
            set {
                if ((this.CompletedDateField.Equals(value) != true)) {
                    this.CompletedDateField = value;
                    this.RaisePropertyChanged("CompletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Participant {
            get {
                return this.ParticipantField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantField, value) != true)) {
                    this.ParticipantField = value;
                    this.RaisePropertyChanged("Participant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParticipantName {
            get {
                return this.ParticipantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantNameField, value) != true)) {
                    this.ParticipantNameField = value;
                    this.RaisePropertyChanged("ParticipantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessId {
            get {
                return this.ProcessIdField;
            }
            set {
                if ((this.ProcessIdField.Equals(value) != true)) {
                    this.ProcessIdField = value;
                    this.RaisePropertyChanged("ProcessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessName {
            get {
                return this.ProcessNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessNameField, value) != true)) {
                    this.ProcessNameField = value;
                    this.RaisePropertyChanged("ProcessName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessStatus {
            get {
                return this.ProcessStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessStatusField, value) != true)) {
                    this.ProcessStatusField = value;
                    this.RaisePropertyChanged("ProcessStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Requester {
            get {
                return this.RequesterField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesterField, value) != true)) {
                    this.RequesterField = value;
                    this.RaisePropertyChanged("Requester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RequesterName {
            get {
                return this.RequesterNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RequesterNameField, value) != true)) {
                    this.RequesterNameField = value;
                    this.RaisePropertyChanged("RequesterName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RowNumber {
            get {
                return this.RowNumberField;
            }
            set {
                if ((this.RowNumberField.Equals(value) != true)) {
                    this.RowNumberField = value;
                    this.RaisePropertyChanged("RowNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalNumber {
            get {
                return this.TotalNumberField;
            }
            set {
                if ((this.TotalNumberField.Equals(value) != true)) {
                    this.TotalNumberField = value;
                    this.RaisePropertyChanged("TotalNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListVisualActivity", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class ListVisualActivity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Participant_tmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateWorkItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> completeddateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string participantField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Participant_tmp {
            get {
                return this.Participant_tmpField;
            }
            set {
                if ((object.ReferenceEquals(this.Participant_tmpField, value) != true)) {
                    this.Participant_tmpField = value;
                    this.RaisePropertyChanged("Participant_tmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Startdate {
            get {
                return this.StartdateField;
            }
            set {
                if ((this.StartdateField.Equals(value) != true)) {
                    this.StartdateField = value;
                    this.RaisePropertyChanged("Startdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateActivity {
            get {
                return this.StateActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.StateActivityField, value) != true)) {
                    this.StateActivityField = value;
                    this.RaisePropertyChanged("StateActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateWorkItem {
            get {
                return this.StateWorkItemField;
            }
            set {
                if ((object.ReferenceEquals(this.StateWorkItemField, value) != true)) {
                    this.StateWorkItemField = value;
                    this.RaisePropertyChanged("StateWorkItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> completeddate {
            get {
                return this.completeddateField;
            }
            set {
                if ((this.completeddateField.Equals(value) != true)) {
                    this.completeddateField = value;
                    this.RaisePropertyChanged("completeddate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string participant {
            get {
                return this.participantField;
            }
            set {
                if ((object.ReferenceEquals(this.participantField, value) != true)) {
                    this.participantField = value;
                    this.RaisePropertyChanged("participant");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListVisualActivityOrder", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class ListVisualActivityOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityDisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Participant_tmpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateActivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateWorkItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> completeddateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string participantField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityDisplayName {
            get {
                return this.ActivityDisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityDisplayNameField, value) != true)) {
                    this.ActivityDisplayNameField = value;
                    this.RaisePropertyChanged("ActivityDisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityOrder {
            get {
                return this.ActivityOrderField;
            }
            set {
                if ((this.ActivityOrderField.Equals(value) != true)) {
                    this.ActivityOrderField = value;
                    this.RaisePropertyChanged("ActivityOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentStatus {
            get {
                return this.DocumentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentStatusField, value) != true)) {
                    this.DocumentStatusField = value;
                    this.RaisePropertyChanged("DocumentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Participant_tmp {
            get {
                return this.Participant_tmpField;
            }
            set {
                if ((object.ReferenceEquals(this.Participant_tmpField, value) != true)) {
                    this.Participant_tmpField = value;
                    this.RaisePropertyChanged("Participant_tmp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Startdate {
            get {
                return this.StartdateField;
            }
            set {
                if ((this.StartdateField.Equals(value) != true)) {
                    this.StartdateField = value;
                    this.RaisePropertyChanged("Startdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateActivity {
            get {
                return this.StateActivityField;
            }
            set {
                if ((object.ReferenceEquals(this.StateActivityField, value) != true)) {
                    this.StateActivityField = value;
                    this.RaisePropertyChanged("StateActivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StateWorkItem {
            get {
                return this.StateWorkItemField;
            }
            set {
                if ((object.ReferenceEquals(this.StateWorkItemField, value) != true)) {
                    this.StateWorkItemField = value;
                    this.RaisePropertyChanged("StateWorkItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> completeddate {
            get {
                return this.completeddateField;
            }
            set {
                if ((this.completeddateField.Equals(value) != true)) {
                    this.completeddateField = value;
                    this.RaisePropertyChanged("completeddate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string participant {
            get {
                return this.participantField;
            }
            set {
                if ((object.ReferenceEquals(this.participantField, value) != true)) {
                    this.participantField = value;
                    this.RaisePropertyChanged("participant");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Activity", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class Activity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CalledFunctionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoordinateXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoordinateYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParticipantPvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticipantTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProcessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TenantIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityType {
            get {
                return this.ActivityTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityTypeField, value) != true)) {
                    this.ActivityTypeField = value;
                    this.RaisePropertyChanged("ActivityType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalledFunction {
            get {
                return this.CalledFunctionField;
            }
            set {
                if ((object.ReferenceEquals(this.CalledFunctionField, value) != true)) {
                    this.CalledFunctionField = value;
                    this.RaisePropertyChanged("CalledFunction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoordinateX {
            get {
                return this.CoordinateXField;
            }
            set {
                if ((object.ReferenceEquals(this.CoordinateXField, value) != true)) {
                    this.CoordinateXField = value;
                    this.RaisePropertyChanged("CoordinateX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoordinateY {
            get {
                return this.CoordinateYField;
            }
            set {
                if ((object.ReferenceEquals(this.CoordinateYField, value) != true)) {
                    this.CoordinateYField = value;
                    this.RaisePropertyChanged("CoordinateY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Participant {
            get {
                return this.ParticipantField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantField, value) != true)) {
                    this.ParticipantField = value;
                    this.RaisePropertyChanged("Participant");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParticipantPv {
            get {
                return this.ParticipantPvField;
            }
            set {
                if ((this.ParticipantPvField.Equals(value) != true)) {
                    this.ParticipantPvField = value;
                    this.RaisePropertyChanged("ParticipantPv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParticipantType {
            get {
                return this.ParticipantTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticipantTypeField, value) != true)) {
                    this.ParticipantTypeField = value;
                    this.RaisePropertyChanged("ParticipantType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProcessId {
            get {
                return this.ProcessIdField;
            }
            set {
                if ((this.ProcessIdField.Equals(value) != true)) {
                    this.ProcessIdField = value;
                    this.RaisePropertyChanged("ProcessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TenantId {
            get {
                return this.TenantIdField;
            }
            set {
                if ((this.TenantIdField.Equals(value) != true)) {
                    this.TenantIdField = value;
                    this.RaisePropertyChanged("TenantId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Actiion", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class Actiion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LineRuleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> NextActivityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActionId {
            get {
                return this.ActionIdField;
            }
            set {
                if ((this.ActionIdField.Equals(value) != true)) {
                    this.ActionIdField = value;
                    this.RaisePropertyChanged("ActionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionType {
            get {
                return this.ActionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionTypeField, value) != true)) {
                    this.ActionTypeField = value;
                    this.RaisePropertyChanged("ActionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ActivityId {
            get {
                return this.ActivityIdField;
            }
            set {
                if ((this.ActivityIdField.Equals(value) != true)) {
                    this.ActivityIdField = value;
                    this.RaisePropertyChanged("ActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LineRuleName {
            get {
                return this.LineRuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LineRuleNameField, value) != true)) {
                    this.LineRuleNameField = value;
                    this.RaisePropertyChanged("LineRuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> NextActivityId {
            get {
                return this.NextActivityIdField;
            }
            set {
                if ((this.NextActivityIdField.Equals(value) != true)) {
                    this.NextActivityIdField = value;
                    this.RaisePropertyChanged("NextActivityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response {
            get {
                return this.ResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseField, value) != true)) {
                    this.ResponseField = value;
                    this.RaisePropertyChanged("Response");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupParticipantDetail", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class GroupParticipantDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string grp_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string people_emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string people_numField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string grp_name {
            get {
                return this.grp_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.grp_nameField, value) != true)) {
                    this.grp_nameField = value;
                    this.RaisePropertyChanged("grp_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string people_email {
            get {
                return this.people_emailField;
            }
            set {
                if ((object.ReferenceEquals(this.people_emailField, value) != true)) {
                    this.people_emailField = value;
                    this.RaisePropertyChanged("people_email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string people_num {
            get {
                return this.people_numField;
            }
            set {
                if ((object.ReferenceEquals(this.people_numField, value) != true)) {
                    this.people_numField = value;
                    this.RaisePropertyChanged("people_num");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PeopleInfo", Namespace="http://schemas.datacontract.org/2004/07/FlowQuestWorkflowService")]
    [System.SerializableAttribute()]
    public partial class PeopleInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string people_emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string people_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string people_numField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string people_positionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string people_email {
            get {
                return this.people_emailField;
            }
            set {
                if ((object.ReferenceEquals(this.people_emailField, value) != true)) {
                    this.people_emailField = value;
                    this.RaisePropertyChanged("people_email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string people_name {
            get {
                return this.people_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.people_nameField, value) != true)) {
                    this.people_nameField = value;
                    this.RaisePropertyChanged("people_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string people_num {
            get {
                return this.people_numField;
            }
            set {
                if ((object.ReferenceEquals(this.people_numField, value) != true)) {
                    this.people_numField = value;
                    this.RaisePropertyChanged("people_num");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string people_position {
            get {
                return this.people_positionField;
            }
            set {
                if ((object.ReferenceEquals(this.people_positionField, value) != true)) {
                    this.people_positionField = value;
                    this.RaisePropertyChanged("people_position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NextflowService.IFlowQuestWorkflowService")]
    public interface IFlowQuestWorkflowService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/CreateProcessInstance", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/CreateProcessInstanceResponse")]
        NexigoApi.NextflowService.CreateProcessInstanceResponse CreateProcessInstance(NexigoApi.NextflowService.CreateProcessInstanceRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/CreateProcessInstance", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/CreateProcessInstanceResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.CreateProcessInstanceResponse> CreateProcessInstanceAsync(NexigoApi.NextflowService.CreateProcessInstanceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetActionsInCurActv", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetActionsInCurActvResponse")]
        NexigoApi.NextflowService.GetActionsInCurActvResponse GetActionsInCurActv(NexigoApi.NextflowService.GetActionsInCurActvRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetActionsInCurActv", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetActionsInCurActvResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetActionsInCurActvResponse> GetActionsInCurActvAsync(NexigoApi.NextflowService.GetActionsInCurActvRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetAvailableActions", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetAvailableActionsResponse")]
        NexigoApi.NextflowService.GetAvailableActionsResponse GetAvailableActions(NexigoApi.NextflowService.GetAvailableActionsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetAvailableActions", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetAvailableActionsResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetAvailableActionsResponse> GetAvailableActionsAsync(NexigoApi.NextflowService.GetAvailableActionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ExecActionInCurrentActv", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ExecActionInCurrentActvResponse")]
        NexigoApi.NextflowService.ExecActionInCurrentActvResponse ExecActionInCurrentActv(NexigoApi.NextflowService.ExecActionInCurrentActvRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ExecActionInCurrentActv", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ExecActionInCurrentActvResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.ExecActionInCurrentActvResponse> ExecActionInCurrentActvAsync(NexigoApi.NextflowService.ExecActionInCurrentActvRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ExecuteAction", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ExecuteActionResponse")]
        NexigoApi.NextflowService.ExecuteActionResponse ExecuteAction(NexigoApi.NextflowService.ExecuteActionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ExecuteAction", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ExecuteActionResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.ExecuteActionResponse> ExecuteActionAsync(NexigoApi.NextflowService.ExecuteActionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GoToActivity", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GoToActivityResponse")]
        NexigoApi.NextflowService.GoToActivityResponse GoToActivity(NexigoApi.NextflowService.GoToActivityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GoToActivity", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GoToActivityResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GoToActivityResponse> GoToActivityAsync(NexigoApi.NextflowService.GoToActivityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ReRoute", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ReRouteResponse")]
        NexigoApi.NextflowService.ReRouteResponse ReRoute(NexigoApi.NextflowService.ReRouteRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ReRoute", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ReRouteResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.ReRouteResponse> ReRouteAsync(NexigoApi.NextflowService.ReRouteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetTaskList", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListResponse")]
        NexigoApi.NextflowService.GetTaskListResponse GetTaskList(NexigoApi.NextflowService.GetTaskListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetTaskList", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetTaskListResponse> GetTaskListAsync(NexigoApi.NextflowService.GetTaskListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListWithOrder", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListWithOrderResponse")]
        NexigoApi.NextflowService.GetTaskListWithOrderResponse GetTaskListWithOrder(NexigoApi.NextflowService.GetTaskListWithOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListWithOrder", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListWithOrderResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetTaskListWithOrderResponse> GetTaskListWithOrderAsync(NexigoApi.NextflowService.GetTaskListWithOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListAdmin", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListAdminResponse")]
        NexigoApi.NextflowService.GetTaskListAdminResponse GetTaskListAdmin(NexigoApi.NextflowService.GetTaskListAdminRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListAdmin", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetTaskListAdminResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetTaskListAdminResponse> GetTaskListAdminAsync(NexigoApi.NextflowService.GetTaskListAdminRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetCommentHistory", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetCommentHistoryResponse")]
        NexigoApi.NextflowService.GetCommentHistoryResponse GetCommentHistory(NexigoApi.NextflowService.GetCommentHistoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetCommentHistory", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetCommentHistoryResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetCommentHistoryResponse> GetCommentHistoryAsync(NexigoApi.NextflowService.GetCommentHistoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetBulkCommentHistory", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetBulkCommentHistoryResponse")]
        NexigoApi.NextflowService.GetBulkCommentHistoryResponse GetBulkCommentHistory(NexigoApi.NextflowService.GetBulkCommentHistoryRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetBulkCommentHistory", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetBulkCommentHistoryResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetBulkCommentHistoryResponse> GetBulkCommentHistoryAsync(NexigoApi.NextflowService.GetBulkCommentHistoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetProcessVariable", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetProcessVariableResponse")]
        NexigoApi.NextflowService.GetProcessVariableResponse GetProcessVariable(NexigoApi.NextflowService.GetProcessVariableRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetProcessVariable", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetProcessVariableResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetProcessVariableResponse> GetProcessVariableAsync(NexigoApi.NextflowService.GetProcessVariableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ChangeProcessVariableValue", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ChangeProcessVariableValueResponse")]
        NexigoApi.NextflowService.ChangeProcessVariableValueResponse ChangeProcessVariableValue(NexigoApi.NextflowService.ChangeProcessVariableValueRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ChangeProcessVariableValue", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ChangeProcessVariableValueResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.ChangeProcessVariableValueResponse> ChangeProcessVariableValueAsync(NexigoApi.NextflowService.ChangeProcessVariableValueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ExecuteCancel", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ExecuteCancelResponse")]
        NexigoApi.NextflowService.ExecuteCancelResponse ExecuteCancel(NexigoApi.NextflowService.ExecuteCancelRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/ExecuteCancel", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/ExecuteCancelResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.ExecuteCancelResponse> ExecuteCancelAsync(NexigoApi.NextflowService.ExecuteCancelRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivity", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityResponse")]
        NexigoApi.NextflowService.GetLastActivityResponse GetLastActivity(NexigoApi.NextflowService.GetLastActivityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivity", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetLastActivityResponse> GetLastActivityAsync(NexigoApi.NextflowService.GetLastActivityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityWithParticipant", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityWithParticipantRespon" +
            "se")]
        NexigoApi.NextflowService.GetLastActivityWithParticipantResponse GetLastActivityWithParticipant(NexigoApi.NextflowService.GetLastActivityWithParticipantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityWithParticipant", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityWithParticipantRespon" +
            "se")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetLastActivityWithParticipantResponse> GetLastActivityWithParticipantAsync(NexigoApi.NextflowService.GetLastActivityWithParticipantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityWithOrder", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityWithOrderResponse")]
        NexigoApi.NextflowService.GetLastActivityWithOrderResponse GetLastActivityWithOrder(NexigoApi.NextflowService.GetLastActivityWithOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityWithOrder", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetLastActivityWithOrderResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetLastActivityWithOrderResponse> GetLastActivityWithOrderAsync(NexigoApi.NextflowService.GetLastActivityWithOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetInitiator", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetInitiatorResponse")]
        NexigoApi.NextflowService.GetInitiatorResponse GetInitiator(NexigoApi.NextflowService.GetInitiatorRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetInitiator", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetInitiatorResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetInitiatorResponse> GetInitiatorAsync(NexigoApi.NextflowService.GetInitiatorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetVisualActivity", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetVisualActivityResponse")]
        NexigoApi.NextflowService.GetVisualActivityResponse GetVisualActivity(NexigoApi.NextflowService.GetVisualActivityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetVisualActivity", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetVisualActivityResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetVisualActivityResponse> GetVisualActivityAsync(NexigoApi.NextflowService.GetVisualActivityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetVisualActivityWithActOrder", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetVisualActivityWithActOrderRespons" +
            "e")]
        NexigoApi.NextflowService.GetVisualActivityWithActOrderResponse GetVisualActivityWithActOrder(NexigoApi.NextflowService.GetVisualActivityWithActOrderRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetVisualActivityWithActOrder", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetVisualActivityWithActOrderRespons" +
            "e")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetVisualActivityWithActOrderResponse> GetVisualActivityWithActOrderAsync(NexigoApi.NextflowService.GetVisualActivityWithActOrderRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetVisualWorkFlow", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetVisualWorkFlowResponse")]
        NexigoApi.NextflowService.GetVisualWorkFlowResponse GetVisualWorkFlow(NexigoApi.NextflowService.GetVisualWorkFlowRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetVisualWorkFlow", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetVisualWorkFlowResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetVisualWorkFlowResponse> GetVisualWorkFlowAsync(NexigoApi.NextflowService.GetVisualWorkFlowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetDetailParticipant", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetDetailParticipantResponse")]
        NexigoApi.NextflowService.GetDetailParticipantResponse GetDetailParticipant(NexigoApi.NextflowService.GetDetailParticipantRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetDetailParticipant", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetDetailParticipantResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetDetailParticipantResponse> GetDetailParticipantAsync(NexigoApi.NextflowService.GetDetailParticipantRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetManagerByPayrollId", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetManagerByPayrollIdResponse")]
        NexigoApi.NextflowService.GetManagerByPayrollIdResponse GetManagerByPayrollId(NexigoApi.NextflowService.GetManagerByPayrollIdRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/GetManagerByPayrollId", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/GetManagerByPayrollIdResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.GetManagerByPayrollIdResponse> GetManagerByPayrollIdAsync(NexigoApi.NextflowService.GetManagerByPayrollIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/SkipProcessGeneric", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/SkipProcessGenericResponse")]
        NexigoApi.NextflowService.SkipProcessGenericResponse SkipProcessGeneric(NexigoApi.NextflowService.SkipProcessGenericRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/SkipProcessGeneric", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/SkipProcessGenericResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.SkipProcessGenericResponse> SkipProcessGenericAsync(NexigoApi.NextflowService.SkipProcessGenericRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/SkipProcess", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/SkipProcessResponse")]
        NexigoApi.NextflowService.SkipProcessResponse SkipProcess(NexigoApi.NextflowService.SkipProcessRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/SkipProcess", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/SkipProcessResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.SkipProcessResponse> SkipProcessAsync(NexigoApi.NextflowService.SkipProcessRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/SkipTheProcess", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/SkipTheProcessResponse")]
        NexigoApi.NextflowService.SkipTheProcessResponse SkipTheProcess(NexigoApi.NextflowService.SkipTheProcessRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlowQuestWorkflowService/SkipTheProcess", ReplyAction="http://tempuri.org/IFlowQuestWorkflowService/SkipTheProcessResponse")]
        System.Threading.Tasks.Task<NexigoApi.NextflowService.SkipTheProcessResponse> SkipTheProcessAsync(NexigoApi.NextflowService.SkipTheProcessRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateProcessInstance", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateProcessInstanceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string processName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string initiatorId;
        
        public CreateProcessInstanceRequest() {
        }
        
        public CreateProcessInstanceRequest(int tenantId, string processName, string initiatorId) {
            this.tenantId = tenantId;
            this.processName = processName;
            this.initiatorId = initiatorId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateProcessInstanceResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CreateProcessInstanceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CreateProcessInstanceResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.TaskItemResult taskItem;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public CreateProcessInstanceResponse() {
        }
        
        public CreateProcessInstanceResponse(bool CreateProcessInstanceResult, NexigoApi.NextflowService.TaskItemResult taskItem, string errorMessage) {
            this.CreateProcessInstanceResult = CreateProcessInstanceResult;
            this.taskItem = taskItem;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActionsInCurActv", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetActionsInCurActvRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        public GetActionsInCurActvRequest() {
        }
        
        public GetActionsInCurActvRequest(int tenantId, int processId) {
            this.tenantId = tenantId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActionsInCurActvResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetActionsInCurActvResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetActionsInCurActvResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.ActivityAction[] availableActions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetActionsInCurActvResponse() {
        }
        
        public GetActionsInCurActvResponse(bool GetActionsInCurActvResult, NexigoApi.NextflowService.ActivityAction[] availableActions, string errorMessage) {
            this.GetActionsInCurActvResult = GetActionsInCurActvResult;
            this.availableActions = availableActions;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAvailableActions", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAvailableActionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Nullable<int> activityId;
        
        public GetAvailableActionsRequest() {
        }
        
        public GetAvailableActionsRequest(int tenantId, int processId, System.Nullable<int> activityId) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.activityId = activityId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAvailableActionsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAvailableActionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetAvailableActionsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.ActivityAction[] availableActions;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetAvailableActionsResponse() {
        }
        
        public GetAvailableActionsResponse(bool GetAvailableActionsResult, NexigoApi.NextflowService.ActivityAction[] availableActions, string errorMessage) {
            this.GetAvailableActionsResult = GetAvailableActionsResult;
            this.availableActions = availableActions;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecActionInCurrentActv", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecActionInCurrentActvRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string actionName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string PayrollId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public System.Nullable<int> positionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string comment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string attachmentName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public bool isadmin;
        
        public ExecActionInCurrentActvRequest() {
        }
        
        public ExecActionInCurrentActvRequest(int tenantId, int processId, string actionName, string PayrollId, System.Nullable<int> positionId, string comment, string attachmentName, bool isadmin) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.actionName = actionName;
            this.PayrollId = PayrollId;
            this.positionId = positionId;
            this.comment = comment;
            this.attachmentName = attachmentName;
            this.isadmin = isadmin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecActionInCurrentActvResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecActionInCurrentActvResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ExecActionInCurrentActvResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public ExecActionInCurrentActvResponse() {
        }
        
        public ExecActionInCurrentActvResponse(bool ExecActionInCurrentActvResult, string errorMessage) {
            this.ExecActionInCurrentActvResult = ExecActionInCurrentActvResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteAction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteActionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Nullable<int> activityId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string actionName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string PayrollId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public System.Nullable<int> positionId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string comment;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=7)]
        public string attachmentName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=8)]
        public bool isadmin;
        
        public ExecuteActionRequest() {
        }
        
        public ExecuteActionRequest(int tenantId, int processId, System.Nullable<int> activityId, string actionName, string PayrollId, System.Nullable<int> positionId, string comment, string attachmentName, bool isadmin) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.activityId = activityId;
            this.actionName = actionName;
            this.PayrollId = PayrollId;
            this.positionId = positionId;
            this.comment = comment;
            this.attachmentName = attachmentName;
            this.isadmin = isadmin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteActionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteActionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ExecuteActionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public ExecuteActionResponse() {
        }
        
        public ExecuteActionResponse(bool ExecuteActionResult, string errorMessage) {
            this.ExecuteActionResult = ExecuteActionResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GoToActivity", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GoToActivityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string activityName;
        
        public GoToActivityRequest() {
        }
        
        public GoToActivityRequest(int tenantId, int processId, string activityName) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.activityName = activityName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GoToActivityResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GoToActivityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GoToActivityResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public GoToActivityResponse() {
        }
        
        public GoToActivityResponse(bool GoToActivityResult, string errorMessage) {
            this.GoToActivityResult = GoToActivityResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReRoute", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReRouteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        public ReRouteRequest() {
        }
        
        public ReRouteRequest(int tenantId, int processId) {
            this.tenantId = tenantId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReRouteResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReRouteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ReRouteResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string goToActivityName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public ReRouteResponse() {
        }
        
        public ReRouteResponse(bool ReRouteResult, string goToActivityName, string errorMessage) {
            this.ReRouteResult = ReRouteResult;
            this.goToActivityName = goToActivityName;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTaskListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string PayrollId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Nullable<int> processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string processName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string activityName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public int page;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public int pageSize;
        
        public GetTaskListRequest() {
        }
        
        public GetTaskListRequest(int tenantId, string PayrollId, System.Nullable<int> processId, string processName, string activityName, int page, int pageSize) {
            this.tenantId = tenantId;
            this.PayrollId = PayrollId;
            this.processId = processId;
            this.processName = processName;
            this.activityName = activityName;
            this.page = page;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTaskListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetTaskListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.TaskItemResult[] taskItems;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetTaskListResponse() {
        }
        
        public GetTaskListResponse(bool GetTaskListResult, NexigoApi.NextflowService.TaskItemResult[] taskItems, string errorMessage) {
            this.GetTaskListResult = GetTaskListResult;
            this.taskItems = taskItems;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskListWithOrder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTaskListWithOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string whereQuery;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int page;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string orderBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string ascOrDesc;
        
        public GetTaskListWithOrderRequest() {
        }
        
        public GetTaskListWithOrderRequest(int tenantId, string whereQuery, int page, int pageSize, string orderBy, string ascOrDesc) {
            this.tenantId = tenantId;
            this.whereQuery = whereQuery;
            this.page = page;
            this.pageSize = pageSize;
            this.orderBy = orderBy;
            this.ascOrDesc = ascOrDesc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskListWithOrderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTaskListWithOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetTaskListWithOrderResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.TaskList[] taskLists;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetTaskListWithOrderResponse() {
        }
        
        public GetTaskListWithOrderResponse(bool GetTaskListWithOrderResult, NexigoApi.NextflowService.TaskList[] taskLists, string errorMessage) {
            this.GetTaskListWithOrderResult = GetTaskListWithOrderResult;
            this.taskLists = taskLists;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskListAdmin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTaskListAdminRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int page;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string appcode;
        
        public GetTaskListAdminRequest() {
        }
        
        public GetTaskListAdminRequest(int tenantId, int page, int pageSize, string appcode) {
            this.tenantId = tenantId;
            this.page = page;
            this.pageSize = pageSize;
            this.appcode = appcode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTaskListAdminResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTaskListAdminResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetTaskListAdminResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.TaskItemResult[] taskItems;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetTaskListAdminResponse() {
        }
        
        public GetTaskListAdminResponse(bool GetTaskListAdminResult, NexigoApi.NextflowService.TaskItemResult[] taskItems, string errorMessage) {
            this.GetTaskListAdminResult = GetTaskListAdminResult;
            this.taskItems = taskItems;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCommentHistory", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCommentHistoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int page;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int pageSize;
        
        public GetCommentHistoryRequest() {
        }
        
        public GetCommentHistoryRequest(int tenantId, int processId, int page, int pageSize) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.page = page;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCommentHistoryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetCommentHistoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetCommentHistoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.CommentHistoryResult[] commentHistories;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetCommentHistoryResponse() {
        }
        
        public GetCommentHistoryResponse(bool GetCommentHistoryResult, NexigoApi.NextflowService.CommentHistoryResult[] commentHistories, string errorMessage) {
            this.GetCommentHistoryResult = GetCommentHistoryResult;
            this.commentHistories = commentHistories;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBulkCommentHistory", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBulkCommentHistoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int page;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int pageSize;
        
        public GetBulkCommentHistoryRequest() {
        }
        
        public GetBulkCommentHistoryRequest(int tenantId, string processId, int page, int pageSize) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.page = page;
            this.pageSize = pageSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBulkCommentHistoryResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetBulkCommentHistoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetBulkCommentHistoryResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.CommentHistoryResult[] commentHistories;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetBulkCommentHistoryResponse() {
        }
        
        public GetBulkCommentHistoryResponse(bool GetBulkCommentHistoryResult, NexigoApi.NextflowService.CommentHistoryResult[] commentHistories, string errorMessage) {
            this.GetBulkCommentHistoryResult = GetBulkCommentHistoryResult;
            this.commentHistories = commentHistories;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProcessVariable", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProcessVariableRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        public GetProcessVariableRequest() {
        }
        
        public GetProcessVariableRequest(int tenantId, int processId) {
            this.tenantId = tenantId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProcessVariableResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetProcessVariableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetProcessVariableResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.ProcessVariable[] processVariables;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetProcessVariableResponse() {
        }
        
        public GetProcessVariableResponse(bool GetProcessVariableResult, NexigoApi.NextflowService.ProcessVariable[] processVariables, string errorMessage) {
            this.GetProcessVariableResult = GetProcessVariableResult;
            this.processVariables = processVariables;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeProcessVariableValue", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangeProcessVariableValueRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string processVariableName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string processVariableValue;
        
        public ChangeProcessVariableValueRequest() {
        }
        
        public ChangeProcessVariableValueRequest(int tenantId, int processId, string processVariableName, string processVariableValue) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.processVariableName = processVariableName;
            this.processVariableValue = processVariableValue;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeProcessVariableValueResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ChangeProcessVariableValueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ChangeProcessVariableValueResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public ChangeProcessVariableValueResponse() {
        }
        
        public ChangeProcessVariableValueResponse(bool ChangeProcessVariableValueResult, string errorMessage) {
            this.ChangeProcessVariableValueResult = ChangeProcessVariableValueResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteCancel", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteCancelRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string PayrollId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string comment;
        
        public ExecuteCancelRequest() {
        }
        
        public ExecuteCancelRequest(int tenantId, int processId, string PayrollId, string comment) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.PayrollId = PayrollId;
            this.comment = comment;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ExecuteCancelResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ExecuteCancelResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool ExecuteCancelResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public ExecuteCancelResponse() {
        }
        
        public ExecuteCancelResponse(bool ExecuteCancelResult, string errorMessage) {
            this.ExecuteCancelResult = ExecuteCancelResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastActivity", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastActivityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        public GetLastActivityRequest() {
        }
        
        public GetLastActivityRequest(int tenantId, int processId) {
            this.tenantId = tenantId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastActivityResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastActivityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetLastActivityResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.ListActivity[] ListActivity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetLastActivityResponse() {
        }
        
        public GetLastActivityResponse(bool GetLastActivityResult, NexigoApi.NextflowService.ListActivity[] ListActivity, string errorMessage) {
            this.GetLastActivityResult = GetLastActivityResult;
            this.ListActivity = ListActivity;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastActivityWithParticipant", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastActivityWithParticipantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string processId;
        
        public GetLastActivityWithParticipantRequest() {
        }
        
        public GetLastActivityWithParticipantRequest(int tenantId, string processId) {
            this.tenantId = tenantId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastActivityWithParticipantResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastActivityWithParticipantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetLastActivityWithParticipantResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.LastActivity[] lastActivity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetLastActivityWithParticipantResponse() {
        }
        
        public GetLastActivityWithParticipantResponse(bool GetLastActivityWithParticipantResult, NexigoApi.NextflowService.LastActivity[] lastActivity, string errorMessage) {
            this.GetLastActivityWithParticipantResult = GetLastActivityWithParticipantResult;
            this.lastActivity = lastActivity;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastActivityWithOrder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastActivityWithOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string whereQuery;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int page;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int pageSize;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string orderBy;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        public string ascOrDesc;
        
        public GetLastActivityWithOrderRequest() {
        }
        
        public GetLastActivityWithOrderRequest(int tenantId, string whereQuery, int page, int pageSize, string orderBy, string ascOrDesc) {
            this.tenantId = tenantId;
            this.whereQuery = whereQuery;
            this.page = page;
            this.pageSize = pageSize;
            this.orderBy = orderBy;
            this.ascOrDesc = ascOrDesc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastActivityWithOrderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastActivityWithOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetLastActivityWithOrderResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.LastActivityOrder[] lastActivity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetLastActivityWithOrderResponse() {
        }
        
        public GetLastActivityWithOrderResponse(bool GetLastActivityWithOrderResult, NexigoApi.NextflowService.LastActivityOrder[] lastActivity, string errorMessage) {
            this.GetLastActivityWithOrderResult = GetLastActivityWithOrderResult;
            this.lastActivity = lastActivity;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInitiator", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInitiatorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        public GetInitiatorRequest() {
        }
        
        public GetInitiatorRequest(int tenantId, int processId) {
            this.tenantId = tenantId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetInitiatorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetInitiatorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetInitiatorResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string initiatorid;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetInitiatorResponse() {
        }
        
        public GetInitiatorResponse(bool GetInitiatorResult, string initiatorid, string errorMessage) {
            this.GetInitiatorResult = GetInitiatorResult;
            this.initiatorid = initiatorid;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVisualActivity", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVisualActivityRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        public GetVisualActivityRequest() {
        }
        
        public GetVisualActivityRequest(int tenantId, int processId) {
            this.tenantId = tenantId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVisualActivityResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVisualActivityResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetVisualActivityResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.ListVisualActivity[] ListVisualActivity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetVisualActivityResponse() {
        }
        
        public GetVisualActivityResponse(bool GetVisualActivityResult, NexigoApi.NextflowService.ListVisualActivity[] ListVisualActivity, string errorMessage) {
            this.GetVisualActivityResult = GetVisualActivityResult;
            this.ListVisualActivity = ListVisualActivity;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVisualActivityWithActOrder", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVisualActivityWithActOrderRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        public GetVisualActivityWithActOrderRequest() {
        }
        
        public GetVisualActivityWithActOrderRequest(int tenantId, int processId) {
            this.tenantId = tenantId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVisualActivityWithActOrderResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVisualActivityWithActOrderResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetVisualActivityWithActOrderResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.ListVisualActivityOrder[] ListVisualActivity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetVisualActivityWithActOrderResponse() {
        }
        
        public GetVisualActivityWithActOrderResponse(bool GetVisualActivityWithActOrderResult, NexigoApi.NextflowService.ListVisualActivityOrder[] ListVisualActivity, string errorMessage) {
            this.GetVisualActivityWithActOrderResult = GetVisualActivityWithActOrderResult;
            this.ListVisualActivity = ListVisualActivity;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVisualWorkFlow", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVisualWorkFlowRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        public GetVisualWorkFlowRequest() {
        }
        
        public GetVisualWorkFlowRequest(int tenantId, int processId) {
            this.tenantId = tenantId;
            this.processId = processId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVisualWorkFlowResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVisualWorkFlowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetVisualWorkFlowResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.Activity[] ListActivity;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public NexigoApi.NextflowService.Actiion[] ListAction;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string errorMessage;
        
        public GetVisualWorkFlowResponse() {
        }
        
        public GetVisualWorkFlowResponse(bool GetVisualWorkFlowResult, NexigoApi.NextflowService.Activity[] ListActivity, NexigoApi.NextflowService.Actiion[] ListAction, string errorMessage) {
            this.GetVisualWorkFlowResult = GetVisualWorkFlowResult;
            this.ListActivity = ListActivity;
            this.ListAction = ListAction;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDetailParticipant", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDetailParticipantRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int group_id;
        
        public GetDetailParticipantRequest() {
        }
        
        public GetDetailParticipantRequest(int tenantId, int group_id) {
            this.tenantId = tenantId;
            this.group_id = group_id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDetailParticipantResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetDetailParticipantResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetDetailParticipantResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.GroupParticipantDetail[] ListParticipant;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetDetailParticipantResponse() {
        }
        
        public GetDetailParticipantResponse(bool GetDetailParticipantResult, NexigoApi.NextflowService.GroupParticipantDetail[] ListParticipant, string errorMessage) {
            this.GetDetailParticipantResult = GetDetailParticipantResult;
            this.ListParticipant = ListParticipant;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetManagerByPayrollId", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetManagerByPayrollIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string PayrollId;
        
        public GetManagerByPayrollIdRequest() {
        }
        
        public GetManagerByPayrollIdRequest(int tenantId, string PayrollId) {
            this.tenantId = tenantId;
            this.PayrollId = PayrollId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetManagerByPayrollIdResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetManagerByPayrollIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetManagerByPayrollIdResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public NexigoApi.NextflowService.PeopleInfo[] PeopleInfos;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string errorMessage;
        
        public GetManagerByPayrollIdResponse() {
        }
        
        public GetManagerByPayrollIdResponse(bool GetManagerByPayrollIdResult, NexigoApi.NextflowService.PeopleInfo[] PeopleInfos, string errorMessage) {
            this.GetManagerByPayrollIdResult = GetManagerByPayrollIdResult;
            this.PeopleInfos = PeopleInfos;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipProcessGeneric", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SkipProcessGenericRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string PayrollId;
        
        public SkipProcessGenericRequest() {
        }
        
        public SkipProcessGenericRequest(int tenantId, int processId, string PayrollId) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.PayrollId = PayrollId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipProcessGenericResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SkipProcessGenericResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SkipProcessGenericResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public SkipProcessGenericResponse() {
        }
        
        public SkipProcessGenericResponse(bool SkipProcessGenericResult, string errorMessage) {
            this.SkipProcessGenericResult = SkipProcessGenericResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipProcess", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SkipProcessRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string PayrollId;
        
        public SkipProcessRequest() {
        }
        
        public SkipProcessRequest(int tenantId, int processId, string PayrollId) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.PayrollId = PayrollId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipProcessResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SkipProcessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SkipProcessResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public SkipProcessResponse() {
        }
        
        public SkipProcessResponse(bool SkipProcessResult, string errorMessage) {
            this.SkipProcessResult = SkipProcessResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipTheProcess", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SkipTheProcessRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int tenantId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int processId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public System.Nullable<int> parentProcessId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string payrollId;
        
        public SkipTheProcessRequest() {
        }
        
        public SkipTheProcessRequest(int tenantId, int processId, System.Nullable<int> parentProcessId, string payrollId) {
            this.tenantId = tenantId;
            this.processId = processId;
            this.parentProcessId = parentProcessId;
            this.payrollId = payrollId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SkipTheProcessResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class SkipTheProcessResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool SkipTheProcessResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorMessage;
        
        public SkipTheProcessResponse() {
        }
        
        public SkipTheProcessResponse(bool SkipTheProcessResult, string errorMessage) {
            this.SkipTheProcessResult = SkipTheProcessResult;
            this.errorMessage = errorMessage;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlowQuestWorkflowServiceChannel : NexigoApi.NextflowService.IFlowQuestWorkflowService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlowQuestWorkflowServiceClient : System.ServiceModel.ClientBase<NexigoApi.NextflowService.IFlowQuestWorkflowService>, NexigoApi.NextflowService.IFlowQuestWorkflowService {
        
        public FlowQuestWorkflowServiceClient() {
        }
        
        public FlowQuestWorkflowServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlowQuestWorkflowServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlowQuestWorkflowServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlowQuestWorkflowServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.CreateProcessInstanceResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.CreateProcessInstance(NexigoApi.NextflowService.CreateProcessInstanceRequest request) {
            return base.Channel.CreateProcessInstance(request);
        }
        
        public bool CreateProcessInstance(int tenantId, string processName, string initiatorId, out NexigoApi.NextflowService.TaskItemResult taskItem, out string errorMessage) {
            NexigoApi.NextflowService.CreateProcessInstanceRequest inValue = new NexigoApi.NextflowService.CreateProcessInstanceRequest();
            inValue.tenantId = tenantId;
            inValue.processName = processName;
            inValue.initiatorId = initiatorId;
            NexigoApi.NextflowService.CreateProcessInstanceResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).CreateProcessInstance(inValue);
            taskItem = retVal.taskItem;
            errorMessage = retVal.errorMessage;
            return retVal.CreateProcessInstanceResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.CreateProcessInstanceResponse> CreateProcessInstanceAsync(NexigoApi.NextflowService.CreateProcessInstanceRequest request) {
            return base.Channel.CreateProcessInstanceAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetActionsInCurActvResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetActionsInCurActv(NexigoApi.NextflowService.GetActionsInCurActvRequest request) {
            return base.Channel.GetActionsInCurActv(request);
        }
        
        public bool GetActionsInCurActv(int tenantId, int processId, out NexigoApi.NextflowService.ActivityAction[] availableActions, out string errorMessage) {
            NexigoApi.NextflowService.GetActionsInCurActvRequest inValue = new NexigoApi.NextflowService.GetActionsInCurActvRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            NexigoApi.NextflowService.GetActionsInCurActvResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetActionsInCurActv(inValue);
            availableActions = retVal.availableActions;
            errorMessage = retVal.errorMessage;
            return retVal.GetActionsInCurActvResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetActionsInCurActvResponse> GetActionsInCurActvAsync(NexigoApi.NextflowService.GetActionsInCurActvRequest request) {
            return base.Channel.GetActionsInCurActvAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetAvailableActionsResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetAvailableActions(NexigoApi.NextflowService.GetAvailableActionsRequest request) {
            return base.Channel.GetAvailableActions(request);
        }
        
        public bool GetAvailableActions(int tenantId, int processId, System.Nullable<int> activityId, out NexigoApi.NextflowService.ActivityAction[] availableActions, out string errorMessage) {
            NexigoApi.NextflowService.GetAvailableActionsRequest inValue = new NexigoApi.NextflowService.GetAvailableActionsRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.activityId = activityId;
            NexigoApi.NextflowService.GetAvailableActionsResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetAvailableActions(inValue);
            availableActions = retVal.availableActions;
            errorMessage = retVal.errorMessage;
            return retVal.GetAvailableActionsResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetAvailableActionsResponse> GetAvailableActionsAsync(NexigoApi.NextflowService.GetAvailableActionsRequest request) {
            return base.Channel.GetAvailableActionsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.ExecActionInCurrentActvResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.ExecActionInCurrentActv(NexigoApi.NextflowService.ExecActionInCurrentActvRequest request) {
            return base.Channel.ExecActionInCurrentActv(request);
        }
        
        public bool ExecActionInCurrentActv(int tenantId, int processId, string actionName, string PayrollId, System.Nullable<int> positionId, string comment, string attachmentName, bool isadmin, out string errorMessage) {
            NexigoApi.NextflowService.ExecActionInCurrentActvRequest inValue = new NexigoApi.NextflowService.ExecActionInCurrentActvRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.actionName = actionName;
            inValue.PayrollId = PayrollId;
            inValue.positionId = positionId;
            inValue.comment = comment;
            inValue.attachmentName = attachmentName;
            inValue.isadmin = isadmin;
            NexigoApi.NextflowService.ExecActionInCurrentActvResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).ExecActionInCurrentActv(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.ExecActionInCurrentActvResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.ExecActionInCurrentActvResponse> ExecActionInCurrentActvAsync(NexigoApi.NextflowService.ExecActionInCurrentActvRequest request) {
            return base.Channel.ExecActionInCurrentActvAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.ExecuteActionResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.ExecuteAction(NexigoApi.NextflowService.ExecuteActionRequest request) {
            return base.Channel.ExecuteAction(request);
        }
        
        public bool ExecuteAction(int tenantId, int processId, System.Nullable<int> activityId, string actionName, string PayrollId, System.Nullable<int> positionId, string comment, string attachmentName, bool isadmin, out string errorMessage) {
            NexigoApi.NextflowService.ExecuteActionRequest inValue = new NexigoApi.NextflowService.ExecuteActionRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.activityId = activityId;
            inValue.actionName = actionName;
            inValue.PayrollId = PayrollId;
            inValue.positionId = positionId;
            inValue.comment = comment;
            inValue.attachmentName = attachmentName;
            inValue.isadmin = isadmin;
            NexigoApi.NextflowService.ExecuteActionResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).ExecuteAction(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.ExecuteActionResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.ExecuteActionResponse> ExecuteActionAsync(NexigoApi.NextflowService.ExecuteActionRequest request) {
            return base.Channel.ExecuteActionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GoToActivityResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GoToActivity(NexigoApi.NextflowService.GoToActivityRequest request) {
            return base.Channel.GoToActivity(request);
        }
        
        public bool GoToActivity(int tenantId, int processId, string activityName, out string errorMessage) {
            NexigoApi.NextflowService.GoToActivityRequest inValue = new NexigoApi.NextflowService.GoToActivityRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.activityName = activityName;
            NexigoApi.NextflowService.GoToActivityResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GoToActivity(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.GoToActivityResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GoToActivityResponse> GoToActivityAsync(NexigoApi.NextflowService.GoToActivityRequest request) {
            return base.Channel.GoToActivityAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.ReRouteResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.ReRoute(NexigoApi.NextflowService.ReRouteRequest request) {
            return base.Channel.ReRoute(request);
        }
        
        public bool ReRoute(int tenantId, int processId, out string goToActivityName, out string errorMessage) {
            NexigoApi.NextflowService.ReRouteRequest inValue = new NexigoApi.NextflowService.ReRouteRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            NexigoApi.NextflowService.ReRouteResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).ReRoute(inValue);
            goToActivityName = retVal.goToActivityName;
            errorMessage = retVal.errorMessage;
            return retVal.ReRouteResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.ReRouteResponse> ReRouteAsync(NexigoApi.NextflowService.ReRouteRequest request) {
            return base.Channel.ReRouteAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetTaskListResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetTaskList(NexigoApi.NextflowService.GetTaskListRequest request) {
            return base.Channel.GetTaskList(request);
        }
        
        public bool GetTaskList(int tenantId, string PayrollId, System.Nullable<int> processId, string processName, string activityName, int page, int pageSize, out NexigoApi.NextflowService.TaskItemResult[] taskItems, out string errorMessage) {
            NexigoApi.NextflowService.GetTaskListRequest inValue = new NexigoApi.NextflowService.GetTaskListRequest();
            inValue.tenantId = tenantId;
            inValue.PayrollId = PayrollId;
            inValue.processId = processId;
            inValue.processName = processName;
            inValue.activityName = activityName;
            inValue.page = page;
            inValue.pageSize = pageSize;
            NexigoApi.NextflowService.GetTaskListResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetTaskList(inValue);
            taskItems = retVal.taskItems;
            errorMessage = retVal.errorMessage;
            return retVal.GetTaskListResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetTaskListResponse> GetTaskListAsync(NexigoApi.NextflowService.GetTaskListRequest request) {
            return base.Channel.GetTaskListAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetTaskListWithOrderResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetTaskListWithOrder(NexigoApi.NextflowService.GetTaskListWithOrderRequest request) {
            return base.Channel.GetTaskListWithOrder(request);
        }
        
        public bool GetTaskListWithOrder(int tenantId, string whereQuery, int page, int pageSize, string orderBy, string ascOrDesc, out NexigoApi.NextflowService.TaskList[] taskLists, out string errorMessage) {
            NexigoApi.NextflowService.GetTaskListWithOrderRequest inValue = new NexigoApi.NextflowService.GetTaskListWithOrderRequest();
            inValue.tenantId = tenantId;
            inValue.whereQuery = whereQuery;
            inValue.page = page;
            inValue.pageSize = pageSize;
            inValue.orderBy = orderBy;
            inValue.ascOrDesc = ascOrDesc;
            NexigoApi.NextflowService.GetTaskListWithOrderResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetTaskListWithOrder(inValue);
            taskLists = retVal.taskLists;
            errorMessage = retVal.errorMessage;
            return retVal.GetTaskListWithOrderResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetTaskListWithOrderResponse> GetTaskListWithOrderAsync(NexigoApi.NextflowService.GetTaskListWithOrderRequest request) {
            return base.Channel.GetTaskListWithOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetTaskListAdminResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetTaskListAdmin(NexigoApi.NextflowService.GetTaskListAdminRequest request) {
            return base.Channel.GetTaskListAdmin(request);
        }
        
        public bool GetTaskListAdmin(int tenantId, int page, int pageSize, string appcode, out NexigoApi.NextflowService.TaskItemResult[] taskItems, out string errorMessage) {
            NexigoApi.NextflowService.GetTaskListAdminRequest inValue = new NexigoApi.NextflowService.GetTaskListAdminRequest();
            inValue.tenantId = tenantId;
            inValue.page = page;
            inValue.pageSize = pageSize;
            inValue.appcode = appcode;
            NexigoApi.NextflowService.GetTaskListAdminResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetTaskListAdmin(inValue);
            taskItems = retVal.taskItems;
            errorMessage = retVal.errorMessage;
            return retVal.GetTaskListAdminResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetTaskListAdminResponse> GetTaskListAdminAsync(NexigoApi.NextflowService.GetTaskListAdminRequest request) {
            return base.Channel.GetTaskListAdminAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetCommentHistoryResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetCommentHistory(NexigoApi.NextflowService.GetCommentHistoryRequest request) {
            return base.Channel.GetCommentHistory(request);
        }
        
        public bool GetCommentHistory(int tenantId, int processId, int page, int pageSize, out NexigoApi.NextflowService.CommentHistoryResult[] commentHistories, out string errorMessage) {
            NexigoApi.NextflowService.GetCommentHistoryRequest inValue = new NexigoApi.NextflowService.GetCommentHistoryRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.page = page;
            inValue.pageSize = pageSize;
            NexigoApi.NextflowService.GetCommentHistoryResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetCommentHistory(inValue);
            commentHistories = retVal.commentHistories;
            errorMessage = retVal.errorMessage;
            return retVal.GetCommentHistoryResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetCommentHistoryResponse> GetCommentHistoryAsync(NexigoApi.NextflowService.GetCommentHistoryRequest request) {
            return base.Channel.GetCommentHistoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetBulkCommentHistoryResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetBulkCommentHistory(NexigoApi.NextflowService.GetBulkCommentHistoryRequest request) {
            return base.Channel.GetBulkCommentHistory(request);
        }
        
        public bool GetBulkCommentHistory(int tenantId, string processId, int page, int pageSize, out NexigoApi.NextflowService.CommentHistoryResult[] commentHistories, out string errorMessage) {
            NexigoApi.NextflowService.GetBulkCommentHistoryRequest inValue = new NexigoApi.NextflowService.GetBulkCommentHistoryRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.page = page;
            inValue.pageSize = pageSize;
            NexigoApi.NextflowService.GetBulkCommentHistoryResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetBulkCommentHistory(inValue);
            commentHistories = retVal.commentHistories;
            errorMessage = retVal.errorMessage;
            return retVal.GetBulkCommentHistoryResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetBulkCommentHistoryResponse> GetBulkCommentHistoryAsync(NexigoApi.NextflowService.GetBulkCommentHistoryRequest request) {
            return base.Channel.GetBulkCommentHistoryAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetProcessVariableResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetProcessVariable(NexigoApi.NextflowService.GetProcessVariableRequest request) {
            return base.Channel.GetProcessVariable(request);
        }
        
        public bool GetProcessVariable(int tenantId, int processId, out NexigoApi.NextflowService.ProcessVariable[] processVariables, out string errorMessage) {
            NexigoApi.NextflowService.GetProcessVariableRequest inValue = new NexigoApi.NextflowService.GetProcessVariableRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            NexigoApi.NextflowService.GetProcessVariableResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetProcessVariable(inValue);
            processVariables = retVal.processVariables;
            errorMessage = retVal.errorMessage;
            return retVal.GetProcessVariableResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetProcessVariableResponse> GetProcessVariableAsync(NexigoApi.NextflowService.GetProcessVariableRequest request) {
            return base.Channel.GetProcessVariableAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.ChangeProcessVariableValueResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.ChangeProcessVariableValue(NexigoApi.NextflowService.ChangeProcessVariableValueRequest request) {
            return base.Channel.ChangeProcessVariableValue(request);
        }
        
        public bool ChangeProcessVariableValue(int tenantId, int processId, string processVariableName, string processVariableValue, out string errorMessage) {
            NexigoApi.NextflowService.ChangeProcessVariableValueRequest inValue = new NexigoApi.NextflowService.ChangeProcessVariableValueRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.processVariableName = processVariableName;
            inValue.processVariableValue = processVariableValue;
            NexigoApi.NextflowService.ChangeProcessVariableValueResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).ChangeProcessVariableValue(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.ChangeProcessVariableValueResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.ChangeProcessVariableValueResponse> ChangeProcessVariableValueAsync(NexigoApi.NextflowService.ChangeProcessVariableValueRequest request) {
            return base.Channel.ChangeProcessVariableValueAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.ExecuteCancelResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.ExecuteCancel(NexigoApi.NextflowService.ExecuteCancelRequest request) {
            return base.Channel.ExecuteCancel(request);
        }
        
        public bool ExecuteCancel(int tenantId, int processId, string PayrollId, string comment, out string errorMessage) {
            NexigoApi.NextflowService.ExecuteCancelRequest inValue = new NexigoApi.NextflowService.ExecuteCancelRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.PayrollId = PayrollId;
            inValue.comment = comment;
            NexigoApi.NextflowService.ExecuteCancelResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).ExecuteCancel(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.ExecuteCancelResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.ExecuteCancelResponse> ExecuteCancelAsync(NexigoApi.NextflowService.ExecuteCancelRequest request) {
            return base.Channel.ExecuteCancelAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetLastActivityResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetLastActivity(NexigoApi.NextflowService.GetLastActivityRequest request) {
            return base.Channel.GetLastActivity(request);
        }
        
        public bool GetLastActivity(int tenantId, int processId, out NexigoApi.NextflowService.ListActivity[] ListActivity, out string errorMessage) {
            NexigoApi.NextflowService.GetLastActivityRequest inValue = new NexigoApi.NextflowService.GetLastActivityRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            NexigoApi.NextflowService.GetLastActivityResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetLastActivity(inValue);
            ListActivity = retVal.ListActivity;
            errorMessage = retVal.errorMessage;
            return retVal.GetLastActivityResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetLastActivityResponse> GetLastActivityAsync(NexigoApi.NextflowService.GetLastActivityRequest request) {
            return base.Channel.GetLastActivityAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetLastActivityWithParticipantResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetLastActivityWithParticipant(NexigoApi.NextflowService.GetLastActivityWithParticipantRequest request) {
            return base.Channel.GetLastActivityWithParticipant(request);
        }
        
        public bool GetLastActivityWithParticipant(int tenantId, string processId, out NexigoApi.NextflowService.LastActivity[] lastActivity, out string errorMessage) {
            NexigoApi.NextflowService.GetLastActivityWithParticipantRequest inValue = new NexigoApi.NextflowService.GetLastActivityWithParticipantRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            NexigoApi.NextflowService.GetLastActivityWithParticipantResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetLastActivityWithParticipant(inValue);
            lastActivity = retVal.lastActivity;
            errorMessage = retVal.errorMessage;
            return retVal.GetLastActivityWithParticipantResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetLastActivityWithParticipantResponse> GetLastActivityWithParticipantAsync(NexigoApi.NextflowService.GetLastActivityWithParticipantRequest request) {
            return base.Channel.GetLastActivityWithParticipantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetLastActivityWithOrderResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetLastActivityWithOrder(NexigoApi.NextflowService.GetLastActivityWithOrderRequest request) {
            return base.Channel.GetLastActivityWithOrder(request);
        }
        
        public bool GetLastActivityWithOrder(int tenantId, string whereQuery, int page, int pageSize, string orderBy, string ascOrDesc, out NexigoApi.NextflowService.LastActivityOrder[] lastActivity, out string errorMessage) {
            NexigoApi.NextflowService.GetLastActivityWithOrderRequest inValue = new NexigoApi.NextflowService.GetLastActivityWithOrderRequest();
            inValue.tenantId = tenantId;
            inValue.whereQuery = whereQuery;
            inValue.page = page;
            inValue.pageSize = pageSize;
            inValue.orderBy = orderBy;
            inValue.ascOrDesc = ascOrDesc;
            NexigoApi.NextflowService.GetLastActivityWithOrderResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetLastActivityWithOrder(inValue);
            lastActivity = retVal.lastActivity;
            errorMessage = retVal.errorMessage;
            return retVal.GetLastActivityWithOrderResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetLastActivityWithOrderResponse> GetLastActivityWithOrderAsync(NexigoApi.NextflowService.GetLastActivityWithOrderRequest request) {
            return base.Channel.GetLastActivityWithOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetInitiatorResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetInitiator(NexigoApi.NextflowService.GetInitiatorRequest request) {
            return base.Channel.GetInitiator(request);
        }
        
        public bool GetInitiator(int tenantId, int processId, out string initiatorid, out string errorMessage) {
            NexigoApi.NextflowService.GetInitiatorRequest inValue = new NexigoApi.NextflowService.GetInitiatorRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            NexigoApi.NextflowService.GetInitiatorResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetInitiator(inValue);
            initiatorid = retVal.initiatorid;
            errorMessage = retVal.errorMessage;
            return retVal.GetInitiatorResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetInitiatorResponse> GetInitiatorAsync(NexigoApi.NextflowService.GetInitiatorRequest request) {
            return base.Channel.GetInitiatorAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetVisualActivityResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetVisualActivity(NexigoApi.NextflowService.GetVisualActivityRequest request) {
            return base.Channel.GetVisualActivity(request);
        }
        
        public bool GetVisualActivity(int tenantId, int processId, out NexigoApi.NextflowService.ListVisualActivity[] ListVisualActivity, out string errorMessage) {
            NexigoApi.NextflowService.GetVisualActivityRequest inValue = new NexigoApi.NextflowService.GetVisualActivityRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            NexigoApi.NextflowService.GetVisualActivityResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetVisualActivity(inValue);
            ListVisualActivity = retVal.ListVisualActivity;
            errorMessage = retVal.errorMessage;
            return retVal.GetVisualActivityResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetVisualActivityResponse> GetVisualActivityAsync(NexigoApi.NextflowService.GetVisualActivityRequest request) {
            return base.Channel.GetVisualActivityAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetVisualActivityWithActOrderResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetVisualActivityWithActOrder(NexigoApi.NextflowService.GetVisualActivityWithActOrderRequest request) {
            return base.Channel.GetVisualActivityWithActOrder(request);
        }
        
        public bool GetVisualActivityWithActOrder(int tenantId, int processId, out NexigoApi.NextflowService.ListVisualActivityOrder[] ListVisualActivity, out string errorMessage) {
            NexigoApi.NextflowService.GetVisualActivityWithActOrderRequest inValue = new NexigoApi.NextflowService.GetVisualActivityWithActOrderRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            NexigoApi.NextflowService.GetVisualActivityWithActOrderResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetVisualActivityWithActOrder(inValue);
            ListVisualActivity = retVal.ListVisualActivity;
            errorMessage = retVal.errorMessage;
            return retVal.GetVisualActivityWithActOrderResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetVisualActivityWithActOrderResponse> GetVisualActivityWithActOrderAsync(NexigoApi.NextflowService.GetVisualActivityWithActOrderRequest request) {
            return base.Channel.GetVisualActivityWithActOrderAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetVisualWorkFlowResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetVisualWorkFlow(NexigoApi.NextflowService.GetVisualWorkFlowRequest request) {
            return base.Channel.GetVisualWorkFlow(request);
        }
        
        public bool GetVisualWorkFlow(int tenantId, int processId, out NexigoApi.NextflowService.Activity[] ListActivity, out NexigoApi.NextflowService.Actiion[] ListAction, out string errorMessage) {
            NexigoApi.NextflowService.GetVisualWorkFlowRequest inValue = new NexigoApi.NextflowService.GetVisualWorkFlowRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            NexigoApi.NextflowService.GetVisualWorkFlowResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetVisualWorkFlow(inValue);
            ListActivity = retVal.ListActivity;
            ListAction = retVal.ListAction;
            errorMessage = retVal.errorMessage;
            return retVal.GetVisualWorkFlowResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetVisualWorkFlowResponse> GetVisualWorkFlowAsync(NexigoApi.NextflowService.GetVisualWorkFlowRequest request) {
            return base.Channel.GetVisualWorkFlowAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetDetailParticipantResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetDetailParticipant(NexigoApi.NextflowService.GetDetailParticipantRequest request) {
            return base.Channel.GetDetailParticipant(request);
        }
        
        public bool GetDetailParticipant(int tenantId, int group_id, out NexigoApi.NextflowService.GroupParticipantDetail[] ListParticipant, out string errorMessage) {
            NexigoApi.NextflowService.GetDetailParticipantRequest inValue = new NexigoApi.NextflowService.GetDetailParticipantRequest();
            inValue.tenantId = tenantId;
            inValue.group_id = group_id;
            NexigoApi.NextflowService.GetDetailParticipantResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetDetailParticipant(inValue);
            ListParticipant = retVal.ListParticipant;
            errorMessage = retVal.errorMessage;
            return retVal.GetDetailParticipantResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetDetailParticipantResponse> GetDetailParticipantAsync(NexigoApi.NextflowService.GetDetailParticipantRequest request) {
            return base.Channel.GetDetailParticipantAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.GetManagerByPayrollIdResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.GetManagerByPayrollId(NexigoApi.NextflowService.GetManagerByPayrollIdRequest request) {
            return base.Channel.GetManagerByPayrollId(request);
        }
        
        public bool GetManagerByPayrollId(int tenantId, string PayrollId, out NexigoApi.NextflowService.PeopleInfo[] PeopleInfos, out string errorMessage) {
            NexigoApi.NextflowService.GetManagerByPayrollIdRequest inValue = new NexigoApi.NextflowService.GetManagerByPayrollIdRequest();
            inValue.tenantId = tenantId;
            inValue.PayrollId = PayrollId;
            NexigoApi.NextflowService.GetManagerByPayrollIdResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).GetManagerByPayrollId(inValue);
            PeopleInfos = retVal.PeopleInfos;
            errorMessage = retVal.errorMessage;
            return retVal.GetManagerByPayrollIdResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.GetManagerByPayrollIdResponse> GetManagerByPayrollIdAsync(NexigoApi.NextflowService.GetManagerByPayrollIdRequest request) {
            return base.Channel.GetManagerByPayrollIdAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.SkipProcessGenericResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.SkipProcessGeneric(NexigoApi.NextflowService.SkipProcessGenericRequest request) {
            return base.Channel.SkipProcessGeneric(request);
        }
        
        public bool SkipProcessGeneric(int tenantId, int processId, string PayrollId, out string errorMessage) {
            NexigoApi.NextflowService.SkipProcessGenericRequest inValue = new NexigoApi.NextflowService.SkipProcessGenericRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.PayrollId = PayrollId;
            NexigoApi.NextflowService.SkipProcessGenericResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).SkipProcessGeneric(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.SkipProcessGenericResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.SkipProcessGenericResponse> SkipProcessGenericAsync(NexigoApi.NextflowService.SkipProcessGenericRequest request) {
            return base.Channel.SkipProcessGenericAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.SkipProcessResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.SkipProcess(NexigoApi.NextflowService.SkipProcessRequest request) {
            return base.Channel.SkipProcess(request);
        }
        
        public bool SkipProcess(int tenantId, int processId, string PayrollId, out string errorMessage) {
            NexigoApi.NextflowService.SkipProcessRequest inValue = new NexigoApi.NextflowService.SkipProcessRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.PayrollId = PayrollId;
            NexigoApi.NextflowService.SkipProcessResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).SkipProcess(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.SkipProcessResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.SkipProcessResponse> SkipProcessAsync(NexigoApi.NextflowService.SkipProcessRequest request) {
            return base.Channel.SkipProcessAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NexigoApi.NextflowService.SkipTheProcessResponse NexigoApi.NextflowService.IFlowQuestWorkflowService.SkipTheProcess(NexigoApi.NextflowService.SkipTheProcessRequest request) {
            return base.Channel.SkipTheProcess(request);
        }
        
        public bool SkipTheProcess(int tenantId, int processId, System.Nullable<int> parentProcessId, string payrollId, out string errorMessage) {
            NexigoApi.NextflowService.SkipTheProcessRequest inValue = new NexigoApi.NextflowService.SkipTheProcessRequest();
            inValue.tenantId = tenantId;
            inValue.processId = processId;
            inValue.parentProcessId = parentProcessId;
            inValue.payrollId = payrollId;
            NexigoApi.NextflowService.SkipTheProcessResponse retVal = ((NexigoApi.NextflowService.IFlowQuestWorkflowService)(this)).SkipTheProcess(inValue);
            errorMessage = retVal.errorMessage;
            return retVal.SkipTheProcessResult;
        }
        
        public System.Threading.Tasks.Task<NexigoApi.NextflowService.SkipTheProcessResponse> SkipTheProcessAsync(NexigoApi.NextflowService.SkipTheProcessRequest request) {
            return base.Channel.SkipTheProcessAsync(request);
        }
    }
}
